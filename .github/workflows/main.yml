# .github/workflows/main.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # 1. Checkout the repository
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
  # 2. Set up Node.js and Install Dependencies
  install_dependencies:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: |
          echo "Installing dependencies..."
          npm install

# Build, Scan, Tag, and Push Image to Amazon ECR
  build_and_scan:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          echo "Building Docker image..."
          docker build -t my-node-app:latest .

      - name: Scan Docker Image with Trivy
        run: |
          echo "Scanning Docker image with Trivy..."
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image my-node-app:latest

      # Set up AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRETE_ACCESS_KEY }}  # Fixed Typo
          aws-region: ${{ secrets.AWS_REGION }}

    

      # ‚úÖ Login to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 711387133889.dkr.ecr.us-east-1.amazonaws.com
          echo "‚úÖ ECR Login successful!"

      # üè∑Ô∏è Tag Docker Image for Amazon ECR
      - name: Tag Docker Image for Amazon ECR
        run: |
          ECR_REPO="711387133889.dkr.ecr.us-east-1.amazonaws.com/actions-cicd"
          echo "üè∑Ô∏è Tagging Docker image for Amazon ECR..."
          docker tag my-node-app:latest $ECR_REPO:latest

      # üìå Verify Local Docker Images
      - name: Verify Local Docker Images
        run: docker images

      # üì§ Push Image to Amazon ECR
      - name: Push Image to Amazon ECR
        run: |
          ECR_REPO="711387133889.dkr.ecr.us-east-1.amazonaws.com/actions-cicd"
          echo "üì§ Pushing Docker image to Amazon ECR..."
          docker push $ECR_REPO:latest

      # ‚úÖ Login to Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          echo "‚úÖ Docker Hub login successful!"

      # üè∑Ô∏è Tag Docker Image for Docker Hub
      - name: Tag Docker Image for Docker Hub
        run: |
          DOCKER_REPO="${{ secrets.DOCKER_USERNAME }}/my-node-app"
          echo "üè∑Ô∏è Tagging Docker image for Docker Hub..."
          docker tag my-node-app:latest $DOCKER_REPO:latest

      # üì§ Push Image to Docker Hub
      - name: Push Image to Docker Hub
        run: |
          DOCKER_REPO="${{ secrets.DOCKER_USERNAME }}/my-node-app"
          echo "üì§ Pushing Docker image to Docker Hub..."
          docker push $DOCKER_REPO:latest
      # Push Image to Amazon ECR
      - name: Push Image to Amazon ECR
        run: |
          ECR_REPO="711387133889.dkr.ecr.us-east-1.amazonaws.com/actions-cicd"
          echo "Pushing Docker image to Amazon ECR..."
          docker push $ECR_REPO:latest
